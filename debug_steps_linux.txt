# Langkah-langkah Debug di Linux Sebelum Build Docker

## 1. Persiapan Lingkungan

# Buat virtual environment
python -m venv venv

# Aktifkan virtual environment
source venv/bin/activate

# Install dependensi
pip install -r requirements.txt

## 2. Setup Kafka Lokal

# Download dan ekstrak Kafka
wget https://downloads.apache.org/kafka/3.4.0/kafka_2.13-3.4.0.tgz
tar -xzf kafka_2.13-3.4.0.tgz
cd kafka_2.13-3.4.0

# Start Zookeeper
bin/zookeeper-server-start.sh config/zookeeper.properties &

# Start Kafka
bin/kafka-server-start.sh config/server.properties &

# Buat topic
bin/kafka-topics.sh --create --topic stream-data --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1

## 3. Setup Spark Lokal

# Download dan ekstrak Spark
wget https://downloads.apache.org/spark/spark-3.4.0/spark-3.4.0-bin-hadoop3.tgz
tar -xzf spark-3.4.0-bin-hadoop3.tgz
export SPARK_HOME=$(pwd)/spark-3.4.0-bin-hadoop3
export PATH=$PATH:$SPARK_HOME/bin

## 4. Konfigurasi Environment Variables

# Buat file .env.debug
cat > .env.debug << EOF
KAFKA_BOOTSTRAP_SERVERS=localhost:9092
KAFKA_TOPIC=stream-data
ENABLE_SPARK=true
ENABLE_KAFKA=true
ENABLE_SCHEDULER=true
PYTHONPATH=$(pwd)
EOF

# Load environment variables
export $(cat .env.debug | xargs)

## 5. Jalankan Komponen Secara Terpisah

# Terminal 1: ETL Pipeline
python etl/main.py

# Terminal 2: Kafka Producer
python etl/stream.producer.py

# Terminal 3: Kafka Consumer
python etl/stream_consumer.py

# Terminal 4: Scheduler
python etl/scheduler.py

# Terminal 5: Spark Job
spark-submit --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.4.0 spark_processor.py

## 6. Verifikasi dan Debug

# Periksa database SQLite
sqlite3 data/market_data.db "SELECT * FROM market_data LIMIT 5;"

# Periksa file CSV
head -n 5 data/market_data.csv

# Periksa log
tail -f scheduler.log

# Periksa proses yang berjalan
ps aux | grep python

## 7. Validasi Sebelum Build Docker

# Pastikan semua komponen berjalan tanpa error
# Periksa koneksi antar komponen
# Verifikasi data mengalir dengan benar

## 8. Troubleshooting Umum

# Jika Kafka error:
# - Periksa apakah Zookeeper berjalan: netstat -tulpn | grep 2181
# - Periksa apakah Kafka berjalan: netstat -tulpn | grep 9092
# - Restart Kafka: bin/kafka-server-stop.sh && bin/kafka-server-start.sh config/server.properties &

# Jika Spark error:
# - Periksa Java version: java -version (harus 8 atau 11)
# - Periksa SPARK_HOME: echo $SPARK_HOME
# - Periksa log Spark: cat $SPARK_HOME/logs/*

# Jika Python error:
# - Periksa versi Python: python --version
# - Periksa dependensi: pip list
# - Periksa PYTHONPATH: echo $PYTHONPATH